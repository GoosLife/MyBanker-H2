using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyBanker
{
    public class Account
    {
        /// <summary>
        /// A unique number identifying the account, generated by the bank.
        /// </summary>
        public int AccountNumber { get; private set; }

        /// <summary>
        /// The age of the account holder.
        /// </summary>
        public byte Age { get; private set; }

        /// <summary>
        /// The name of the account holder.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// The cards associated with the account.
        /// </summary>
        private List<Card> cards = new List<Card>();

        /// <summary>
        /// Creates a new account with the specified age and name.
        /// </summary>
        /// <param name="age">The current age of the accountholder.</param>
        /// <param name="name">The name of the accountholder</param>
        public Account(byte age, string name)
        {
            Age = age;
            Name = name;
        }

        /// <summary>
        /// Returns a read-only collection of the cards associated with the account.
        /// </summary>
        /// <returns></returns>
        public IReadOnlyCollection<Card> GetAllCards() {
            return cards.ToArray().AsReadOnly();
        }

        /// <summary>
        /// Adds a card to the account. Fails if the card's minimum age is higher than the account holder's age.
        /// </summary>
        /// <param name="card">The card to add.</param>
        /// <returns></returns>
        public bool AddCard(Card card)
        {
            if (card.MinimumAge <= Age)
            {
                cards.Add(card);
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
